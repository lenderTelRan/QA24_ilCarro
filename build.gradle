plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    implementation group: 'org.testng', name: 'testng', version: '7.4.0'
    implementation 'org.projectlombok:lombok:1.18.22'

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'

    implementation 'ch.qos.logback:logback-classic:1.2.11'
}

test {
    useTestNG()
}

task all(type: Test) {
    useTestNG(){
        def suite = System.getProperty('suite', '')

        if (suite.equalsIgnoreCase('login')) {
            suites 'src/test/resources/logintests.xml'
        } else if (suite.equalsIgnoreCase('smoke')) {
            suites 'src/test/resources/smoketests.xml'

        } else {
            suites 'src/test/resources/alltests.xml'
        }
//        ./gradlew clean -Dsuite='smoke' qa
//        ./gradlew clean -Pbrowser=firefox -Dsuite='quick' qa
//        -D - definition
//        -P - property
    }
}

task smoke(type: Test) {
    useTestNG() {
        suites 'src/test/resources/smoketests.xml'
    }
    if(project.hasProperty('browser')) {
        systemProperty 'browser',
                "${browser}"
    }
}

task team(type: Test) {
    useTestNG() {
        def groups = System.getProperty('groups')
        if(groups != null) {
            includeGroups groups
        }
/*
            *** Run tests by groups ***
        ./gradlew clean -Dgroups=smoke team
        ./gradlew clean -Dgroups=regress team
        ./gradlew clean -Dgroups=retest team
 */
        suites 'src/test/resources/base.xml'
    }
}